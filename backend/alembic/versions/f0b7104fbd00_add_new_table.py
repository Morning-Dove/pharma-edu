"""add new table

Revision ID: f0b7104fbd00
Revises: 
Create Date: 2024-09-03 09:23:08.695646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'f0b7104fbd00'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY', name='state'), nullable=False),
    sa.Column('zipcode', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('allergies', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('insurance_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('insurance_member_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('insurance_group_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('insurance_rx_bin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('insurance_rx_pcn', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('insurance_person_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescriber',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prescriber_type', sa.Enum('MD', 'DO', 'DPM', 'DDS', 'DMD', 'OD', 'PharmD', 'DC', 'ND', 'NMD', 'DVM', 'PhD', name='prescribertype'), nullable=False),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('state', sa.Enum('AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY', name='state'), nullable=False),
    sa.Column('zipcode', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contact_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dea', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('npi', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rxitem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('strength', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ndc', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expiration', sa.Date(), nullable=False),
    sa.Column('lot_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dosage_form', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dea_schedule', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prescription',
    sa.Column('rx_number', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('prescriber_id', sa.Integer(), nullable=False),
    sa.Column('prescribed_date', sa.Date(), nullable=False),
    sa.Column('rx_item_id', sa.Integer(), nullable=False),
    sa.Column('directions', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_dispensed', sa.Integer(), nullable=False),
    sa.Column('refills', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'SOLD', name='prescriptionstatus'), nullable=False),
    sa.Column('tech_initials', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.ForeignKeyConstraint(['prescriber_id'], ['prescriber.id'], ),
    sa.ForeignKeyConstraint(['rx_item_id'], ['rxitem.id'], ),
    sa.PrimaryKeyConstraint('rx_number')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prescription')
    op.drop_table('rxitem')
    op.drop_table('prescriber')
    op.drop_table('patient')
    # ### end Alembic commands ###
